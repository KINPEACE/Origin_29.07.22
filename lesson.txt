Lesson_1
try without conflict 

Краткая инструкция:

Введение:

Что такое Git?

Git - это одна из реализаций распределённых систем контроля версий, имеющая как и локальные, так и удалённые репозитории. Является самой популярной реализацией систем контроля версий в мире.

Создание коммитов:

Git add -Для добавления измений в коммит используется команда *git add*. Чтобы использовать команду *git add* напишите *git add <имя файла>*

Git status -Для того, чтобы посмотреть состояние репозитория используется команда *git status*. Для этого необходимо в папке с репозиторием написать *git status*, и Вы увидите были ли измения в файлах, или их не было.

Git commit -Для того, чтобы создать коммит(сохранение) необходимо выполнить команду *git commit*. Выполняется она так: *git commit -m "<сообщение к коммиту>*. Все файлы для коммита должны быть ***ДОБАВЛЕНЫ*** и сообщение к коммиту писать ***ОБЯЗАТЕЛЬНО***.

Git checkout -Для того, чтобы перемещаться между коммитами, используется команда *git checkout*. Используется она в папке с пепозиторием следующим образом: *git checkout <номер коммита>*

Git log -Для того, чтобы посмтреть все сделанные изменения в репозитории, используется команда *git log*. Для этого достаточно выполнить команду *git log* в папке с репозиторием

Git branch (имя ветки) -Для того, чтобы создать новую ветку используется команда *git branch (любое имя)*.

Git checkout (branch имя ветки) - Для того, чтобы перемещаться между ветками, используется команда *git checkout (branch имя ветки)*. Используется она в папке с репозиторием следующим образом: *git checkout <имя ветки>*

Git merge (имя ветки) - Для того, чтобы добавить информацию из одной веткив другую, используется команда *Git merge (имя ветки)*. Самое главное, вы должны находится в той ветке, в которую хотите перенести данные из другой ветки! 

Git merge --abort - Эта команда применяется для того, чтобы отменить слияние веток.

Это пока что всё, но дальше только больше)